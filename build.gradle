buildscript {
    repositories {
        maven { url = "http://files.minecraftforge.net/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def apiVersion
def minecraftVersion
def loaderVersion
group = "com.rdvdev2.TimeTravelMod"
archivesBaseName = "TimeTravelMod-Forge"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets.main {
    java {
        srcDirs = ['src/main/java']
    }
    resources {
        srcDirs = ['src/main/resources']
    }
}

minecraft {
    mappings channel: 'snapshot', version: '20200205-1.15.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                timetravelmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                timetravelmod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.0'
}

processResources {
    def versionPropsFile = file('version.properties')
    inputs.file versionPropsFile

    def Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    def mc = versionProps['MC']
    def loader = versionProps['LOADER']
    def majormod = versionProps['MAJORMOD']
    def majorapi = versionProps['MAJORAPI']
    def minor = versionProps['MINOR']
    def patch = versionProps['PATCH']

    apiVersion = mc + "-" + majormod + "." + majorapi
    project.version = apiVersion + "." + minor + "." + patch
    minecraftVersion = mc
    loaderVersion = loader

    // replace stuff in mods.toml, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand ('loaderVersion':loaderVersion, 'modVersion':project.version, 'minecraftVersion':minecraftVersion)
    }

    // copy everything else except the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

jar {
    manifest {
        attributes(["Specification-Title": "Minecraft Forge",
                    "Specification-Vendor": "The Minecraft Forge Team",
                    "Specification-Version": loaderVersion +".0",
                    "Implementation-Title": "Time Travel Mod",
                    "Implementation-Version": project.version,
                    "Implementation-Vendor" :"rdvdev2",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}